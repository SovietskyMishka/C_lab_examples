#include <stdio.h>	//	подключение библиотек
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <locale.h>
int random(int a, int b) {	//	Функция получения случаных значений
	return a + rand() % (b - a + 1);	//	Возврат случайного значения в ф-цию
}
void vvod_klav(int** a, int N) {	//	Функция	для ввода значений в двумерный массив с клавиатуры
	int i = 0, j = 0;
	for (i = 0; i < N; i++) {	//	Цикл по строкам
		for (j = 0; j < N; j++) {	//	Цикл по столбцам
			printf("Эл-т A[%d][%d] = ", i, j);
			scanf_s("%d", &a[i][j]);	//	Ввод значения в двумерный массив
			printf("\n");
		}
	}
}
void vvod_rand(int** a, int N) {	//	Функция случайного ввода двумерного массива
	int i = 0, j = 0;
	for (i = 0; i < N; i++) {	//	Цикл по строкам
		for (j = 0; j < N; j++)	//	Цикл по столбцам
			a[i][j] = random(1, 20);	//	Присваивание элементу двумерного массива случайного значения вызовом ф-ции random(от 1 до 20)
	}
}
void magicSquare(int** a, int N) {	//	Функция для нахождения магического квадрата матрицы
	int i = 0, j = -1, sum1 = 0, sum2 = 0;
	for (i = 0; i < N; i++) {	//	Цикл по строкам
		j++;	//	Номер элемента стобцов от 0 до N
		sum1 += a[i][j];	//	Сумма элементов двумерного массива
	}	
	j = N;	//	Номер элемента столбцов равен последнему элементу
	for (i = 0; i < N; i++) {	//	Цикл по строкам
		j--;	//	Номер элемента столцов от N до 0
		sum2 += a[i][j];	//	Сумма элементов двумерного массива
	}
	if (sum1 == sum2)
		printf("Данная матрица является магическим квадратом\n"); //	Если sum1 равна sum2
	else
		printf("Данная матрица НЕ является магическим квадратом\n");	//	Если sum1 не равна sum2
}
void vivod(int** a, int N) {	//	Ф-ция для вывода элементов массива на экран
	int i = 0, j = 0;
	for (i = 0; i < N; i++) {	//	Цикл по строкам
		for (j = 0; j < N; j++)	//	Цикл по столбцам
			printf("Эл-т A[%d][%d] = %d\n", i, j, a[i][j]);
	}
}
void vivodMatrix(int** a, int N) {	//	Вывод значений элементов массива в матричном виде
	int i = 0, j = 0;
	for (i = 0; i < N; i++) {	//	Цикл по строкам
		for (j = 0; j < N; j++) {	//	Цикл по столбцам
			printf("%4.d ", a[i][j]);
			if (j == N - 1)	// Если номер элемента строки равен кол-ву столбцов матрицы
				printf("\n");	//	Перенос на новую строку
		}
	}
}
void main() {
	setlocale(LC_ALL, "rus");	// Подключение кириллицы в консоли
	int** A;
	int n, p, i;
	srand(time(NULL));	//	Обнуление базы для генерации чисел
	do { //	Цикл пока размер матрицы меньше 2х
		printf("Введите размер матрицы n x n:\nn = ");
		scanf_s("%d", &n);	//	Ввод размера кадратной матрицы
	} while (n < 2);
	A = (int**)malloc(n * sizeof(int*));	//	Определение кол-ва столбцов двумерного массива A
	for (i = 0; i < n; i++)	
		A[i] = (int*)malloc(n * sizeof(int));	//	Определение количества строк двумерного массива
	printf("Выберите способ ввода:\n1 - клавиатура\nлюбой другой - рандом\n");
	scanf_s("%d", &p);	//	Ввод способа заполнения двумерного массива
	if (p == 1)	
		vvod_klav(A, n);	//	Вызов функции ввода с клавиатуры, если p = 1
	else
		vvod_rand(A, n);	//	Вызов ф-2ии случайного ввода, если p не равно 1
	vivod(A, n);	//	Вызов ф-ции вывода значений элементов массива
	vivodMatrix(A, n);	//	Вызов ф-ции вывода значений двумерного массива в матричном виде
	magicSquare(A, n);	//	Вызов ф-ции проверки матрицы на магический квадрат
	getchar(); getchar();	//	Конец программы
}