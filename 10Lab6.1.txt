#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <locale.h>		//	Подключение библиотек

int proverka(char* rnum) {		//	Ф-ция для проверки правильной записи вещественного числа
	char num[] = { "0123456789" };	//	Массив цифр для проверки правильности записанных символов
	int flag1, flag2 = 0;
	for (int i = 0; i < strlen(rnum); i++) {	//	Цикл по элементам заданной строки
		flag1 = 0;	//	Обнуление метки
		if (!i) {	//	Если i = 0
			if (rnum[i] == '-')	//	Выполняется при условии, что 0-ой элемент = 0
				i++;	//	Элемент строки +1
		}
		if (i && !flag2) {	//	Если i не равно 0 и метка flag2 = 0
			if (rnum[i] == '.') {	//	Выполняется при условии, что i-ый эл-т равен точке  
				flag2 = 1;	//	Метка flag2 = 1
				i++;	//	Элемент строки +1
			}
		}
		for (int j = 0; j < strlen(num); j++) {		//	Цикл по элементам строки num для проверки записанных символов
			if (rnum[i] == num[j]) {	//	Если i-ый эл-т заданной строки равен j-ому эл-ту строки num
				flag1 = 1;	//	Метка flag1 = 1
				break;	//	Выход из цикла
			}
		}
		if (!flag1)	//	Если метка flag1 = 0
			return 0;	//	Ф-ция возвращает 0
	}
	if (!flag2)	//	Если метка flag2 = 0, т.е. в заданной строке не была записана '.' 
		return 0;		//	Ф-ция возвращает 0
	return 1;	//	Ф-ция возвращает 1, т.е. вещественное число записано правильно
}

int main() {	//	Главная Ф-ция
	setlocale(LC_ALL, "rus");	//	Подключение кириллицы в консоли
	char real_num[33];	//	Объявление строки для ввода
	printf("Введите вещественное число:\n");
	scanf("%s", &real_num);		//	Ввод строки
	if (proverka(real_num))	//	Если ф-ция proverka() вернула 1
		printf("Заданная строка является правильной записью вещественного числа.\n");
	else //		Если ф-ция proverka() вернула 0
		printf("Заданная строка является НЕправильной записью вещественного числа!\n");
	return 0;	//	Конец программы
}